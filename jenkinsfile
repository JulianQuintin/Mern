pipeline {
    agent any
    
    environment {
        DOCKER_CMD = '/usr/local/bin/docker'
        DOCKER_BUILDKIT = '0'
    }

    stages {
        stage('Preparar Entorno') {
            steps {
                script {
                    // Configuración segura sin variables complejas en sh
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        // Usamos comillas simples para evitar problemas con $
                        sh '''
                            mkdir -p ~/.docker
                            sudo ln -sf /Applications/Docker.app/Contents/Resources/bin/docker-credential-osxkeychain /usr/local/bin/ || true
                            sudo chmod +x /usr/local/bin/docker-credential-osxkeychain || true
                        '''
                        // Configuración de credenciales con formato simplificado
                        sh """
                            echo '{
                                "auths": {
                                    "https://index.docker.io/v1/": {
                                        "auth": "'$(echo -n "$DOCKER_USER:$DOCKER_PASS" | base64)'"
                                    }
                                }
                            }' > ~/.docker/config.json
                        """
                    }
                }
            }
        }

        stage('Checkout Código') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/JulianQuintin/Mern.git',
                        credentialsId: 'GitHubtoken2'
                    ]]
                ])
            }
        }

        stage('Construir Imagen') {
            steps {
                script {
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh """
                            ${env.DOCKER_CMD} login -u "$DOCKER_USER" -p "$DOCKER_PASS"
                            ${env.DOCKER_CMD} build --no-cache -t julianquintin/mern-mysql-crud-master:${env.BUILD_NUMBER} -f dockerfile .
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                sh "${env.DOCKER_CMD} system prune -f || true"
                echo "Build ${currentBuild.currentResult} - ${env.BUILD_URL}"
            }
        }
    }
}