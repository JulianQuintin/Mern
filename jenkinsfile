pipeline {
    agent any

    environment {
        DOCKER_CMD = '/usr/local/bin/docker'
        DOCKER_IMAGE = "julianquintin/mern-mysql-crud-master:${env.BUILD_NUMBER}"
        KUBECONFIG = "${env.HOME}/.kube/config"
        NAMESPACE = "mern-namespace"
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    userRemoteConfigs: [[
                        url: 'https://github.com/JulianQuintin/Mern.git',
                        credentialsId: 'GitHubtoken2'
                    ]]
                ])
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    sh """
                        ${env.DOCKER_CMD} build -t ${env.DOCKER_IMAGE} -f dockerfile .
                    """
                }
            }
        }

        stage('Prepare Kubernetes') {
            steps {
                script {
                    sh """
                        # Create namespace if doesn't exist
                        kubectl get ns ${env.NAMESPACE} || kubectl create ns ${env.NAMESPACE}
                        
                        # Verify cluster access
                        kubectl cluster-info
                    """
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh """
                        # Apply Kubernetes manifests
                        kubectl apply -f k8s/namespace.yaml
                        kubectl apply -f k8s/mysql-deployment.yaml -n ${env.NAMESPACE}
                        kubectl apply -f k8s/app-deployment.yaml -n ${env.NAMESPACE}
                        kubectl apply -f k8s/service.yaml -n ${env.NAMESPACE}
                        
                        # Update image
                        kubectl set image deployment/mern-app mern-app=${env.DOCKER_IMAGE} -n ${env.NAMESPACE}
                        
                        # Verify rollout
                        kubectl rollout status deployment/mern-app -n ${env.NAMESPACE} --timeout=300s
                    """
                }
            }
        }
    }

    post {
        always {
            echo "Pipeline execution completed with status: ${currentBuild.currentResult}"
            sh "${env.DOCKER_CMD} system prune -f || true"
        }
    }
}