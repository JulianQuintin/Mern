pipeline {
    agent any
    
    environment {
        // Configuración de Docker
        DOCKER_CMD = '/usr/local/bin/docker'
        DOCKER_BUILDKIT = '0'  // Desactiva BuildKit
        DOCKER_CONFIG = "${env.HOME}/.docker"
    }

    stages {
        stage('Preparar Entorno') {
            steps {
                script {
                    // 1. Crear symlink para el helper de credenciales
                    sh '''
                        sudo ln -sf /Applications/Docker.app/Contents/Resources/bin/docker-credential-osxkeychain /usr/local/bin/
                        sudo chmod +x /usr/local/bin/docker-credential-osxkeychain
                    '''
                    
                    // 2. Configurar credenciales directas (versión corregida)
                    withCredentials([usernamePassword(
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKER_USER',
                        passwordVariable: 'DOCKER_PASS'
                    )]) {
                        sh """
                            mkdir -p ${env.DOCKER_CONFIG}
                            echo '{
                                "auths": {
                                    "https://index.docker.io/v1/": {
                                        "auth": "'$(echo -n ${DOCKER_USER}:${DOCKER_PASS} | base64)'"
                                    }
                                }
                            }' > ${env.DOCKER_CONFIG}/config.json
                        """
                    }
                }
            }
        }

        stage('Checkout Código') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [
                        [$class: 'CleanBeforeCheckout'],
                        [$class: 'CloneOption', depth: 1, shallow: true]
                    ],
                    userRemoteConfigs: [[
                        url: 'https://github.com/JulianQuintin/Mern.git',
                        credentialsId: 'GitHubtoken2'
                    ]]
                ])
            }
        }

        stage('Construir Imagen Docker') {
            steps {
                script {
                    sh """
                        ${env.DOCKER_CMD} login -u ${env.DOCKER_USER} -p ${env.DOCKER_PASS}
                        ${env.DOCKER_CMD} build --no-cache -t julianquintin/mern-mysql-crud-master:${env.BUILD_NUMBER} -f dockerfile .
                    """
                }
            }
        }
    }

    post {
        always {
            script {
                sh """
                    ${env.DOCKER_CMD} system prune -f || true
                """
                echo "Build ${currentBuild.currentResult} - ${env.BUILD_URL}"
            }
        }
    }
}