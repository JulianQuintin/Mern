pipeline {
    agent any
    
    environment {
        DOCKER_CMD = '/usr/local/bin/docker'
        DOCKER_BUILDKIT = '0'
        DOCKER_CONFIG = "${env.HOME}/.docker"
    }

    stages {
        stage('Preparar Entorno') {
            steps {
                script {
                    // Configuración segura de credenciales
                    withCredentials([[
                        $class: 'UsernamePasswordMultiBinding',
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKERHUB_USER',
                        passwordVariable: 'DOCKERHUB_PASS'
                    ]]) {
                        // 1. Crear estructura de docker
                        sh """
                            mkdir -p "${env.DOCKER_CONFIG}"
                            echo '{
                                "auths": {
                                    "https://index.docker.io/v1/": {
                                        "auth": "'$(echo -n "$DOCKERHUB_USER:$DOCKERHUB_PASS" | base64)'"
                                    }
                                }
                            }' > "${env.DOCKER_CONFIG}/config.json"
                        """
                        
                        // 2. Configurar helper de credenciales
                        sh '''
                            sudo ln -sf /Applications/Docker.app/Contents/Resources/bin/docker-credential-osxkeychain /usr/local/bin/ || true
                            sudo chmod +x /usr/local/bin/docker-credential-osxkeychain || true
                        '''
                    }
                }
            }
        }

        stage('Checkout Código') {
            steps {
                checkout([
                    $class: 'GitSCM',
                    branches: [[name: 'main']],
                    extensions: [],
                    userRemoteConfigs: [[
                        url: 'https://github.com/JulianQuintin/Mern.git',
                        credentialsId: 'GitHubtoken2'
                    ]]
                ])
            }
        }

        stage('Construir Imagen') {
            steps {
                script {
                    withCredentials([[
                        $class: 'UsernamePasswordMultiBinding',
                        credentialsId: 'dockerhub-creds',
                        usernameVariable: 'DOCKERHUB_USER',
                        passwordVariable: 'DOCKERHUB_PASS'
                    ]]) {
                        sh """
                            ${env.DOCKER_CMD} login -u "$DOCKERHUB_USER" -p "$DOCKERHUB_PASS"
                            ${env.DOCKER_CMD} build \\
                                --no-cache \\
                                -t julianquintin/mern-mysql-crud-master:${env.BUILD_NUMBER} \\
                                -f dockerfile .
                        """
                    }
                }
            }
        }
    }

    post {
        always {
            script {
                sh "${env.DOCKER_CMD} system prune -f || true"
                echo "Build ${currentBuild.currentResult} - ${env.BUILD_URL}"
            }
        }
    }
}